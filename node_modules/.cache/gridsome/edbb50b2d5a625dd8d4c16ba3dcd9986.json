{"remainingRequest":"/Users/dev/Projects/new/zvekov/frontend_gridsome/node_modules/babel-loader/lib/index.js??ref--1-1!/Users/dev/Projects/new/zvekov/frontend_gridsome/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/dev/Projects/new/zvekov/frontend_gridsome/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/dev/Projects/new/zvekov/frontend_gridsome/src/components/organisms/NotesSearch.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/dev/Projects/new/zvekov/frontend_gridsome/src/components/organisms/NotesSearch.vue","mtime":1603648068069},{"path":"/Users/dev/Projects/new/zvekov/frontend_gridsome/node_modules/cache-loader/dist/cjs.js","mtime":1603648050611},{"path":"/Users/dev/Projects/new/zvekov/frontend_gridsome/node_modules/babel-loader/lib/index.js","mtime":1603648050172},{"path":"/Users/dev/Projects/new/zvekov/frontend_gridsome/node_modules/cache-loader/dist/cjs.js","mtime":1603648050611},{"path":"/Users/dev/Projects/new/zvekov/frontend_gridsome/node_modules/vue-loader/lib/index.js","mtime":1603648055436}],"contextDependencies":[],"result":["import \"core-js/modules/es.array.filter\";\nimport \"core-js/modules/es.array.includes\";\nimport \"core-js/modules/es.function.name\";\nimport \"core-js/modules/es.string.includes\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      notes: [],\n      query: \"\"\n    };\n  },\n  computed: {\n    filteredList: function filteredList() {\n      var _this = this;\n\n      return this.notes.filter(function (note) {\n        return note.name.toLowerCase().includes(_this.query.toLowerCase());\n      });\n    }\n  }\n};",{"version":3,"sources":["NotesSearch.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,KAAA,EAAA;AAFA,KAAA;AAIA,GANA;AAOA,EAAA,QAAA,EAAA;AACA,IAAA,YADA,0BACA;AAAA;;AACA,aAAA,KAAA,KAAA,CAAA,MAAA,CAAA,UAAA,IAAA,EAAA;AACA,eAAA,IAAA,CAAA,IAAA,CAAA,WAAA,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,WAAA,EAAA,CAAA;AACA,OAFA,CAAA;AAGA;AALA;AAPA,CAAA","sourcesContent":["<template>\n  <div>\n    <input\n      v-model=\"query\"\n      class=\"mb-8 border border-gray-700 rounded-md px-3 py-1 w-full md:w-2/3 pointer text-base\"\n      :placeholder=\"$t('organisms.search.placeholder')\"\n      type=\"search\"\n    />\n    <div v-if=\"query\">\n      <div>\n        <div\n          v-for=\"note in $static.strapi.notes\"\n          :key=\"note.slug\"\n          class=\"w-full\"\n        >\n          <g-link :to=\"'/notes/' + note.slug + '/'\">\n            <div>\n              <p>{{ note.name }}</p>\n            </div>\n          </g-link>\n        </div>\n      </div>\n      <div v-if=\"filteredList.length == 0\">\n        <p>{{ $t(\"organisms.search.not_found\") }}</p>\n      </div>\n    </div>\n  </div>\n</template>\n<static-query>\n  query{\n    strapi {\n      notes {\n        slug\n        name\n        content\n        published_at\n      }\n\t  }\n  }\n</static-query>\n<script>\nexport default {\n  data() {\n    return {\n      notes: [],\n      query: \"\",\n    };\n  },\n  computed: {\n    filteredList() {\n      return this.notes.filter((note) => {\n        return note.name.toLowerCase().includes(this.query.toLowerCase());\n      });\n    },\n  },\n};\n</script>\n<style lang=\"postcss\" scoped>\ninput::placeholder {\n  @apply opacity-100;\n  color: #38485a;\n}\ninput:placeholder-shown {\n  @apply opacity-100;\n  color: #38485a;\n}\n</style>\n"],"sourceRoot":"src/components/organisms"}]}