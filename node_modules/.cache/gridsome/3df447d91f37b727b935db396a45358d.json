{"remainingRequest":"/Users/dev/Projects/new/zvekov/frontend_gridsome/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/dev/Projects/new/zvekov/frontend_gridsome/src/pages/Contact.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/dev/Projects/new/zvekov/frontend_gridsome/src/pages/Contact.vue","mtime":1603648056036},{"path":"/Users/dev/Projects/new/zvekov/frontend_gridsome/node_modules/cache-loader/dist/cjs.js","mtime":1603648050611},{"path":"/Users/dev/Projects/new/zvekov/frontend_gridsome/node_modules/babel-loader/lib/index.js","mtime":1603648050172},{"path":"/Users/dev/Projects/new/zvekov/frontend_gridsome/node_modules/cache-loader/dist/cjs.js","mtime":1603648050611},{"path":"/Users/dev/Projects/new/zvekov/frontend_gridsome/node_modules/vue-loader/lib/index.js","mtime":1603648055436}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n\nimport Task from \"~/components/organisms/Task\"\nimport Messanagers from \"~/components/organisms/Messanagers\"\nexport default {\n  components: {\n    Task,\n    Messanagers,\n  },\n  data() {\n    return {\n      // moment: moment,\n      jsonld: {\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        itemListElement: [\n          {\n            \"@type\": \"ListItem\",\n            position: 1,\n            item: {\n              \"@id\": process.env.APP_URL,\n              name: this.$t(\"homepage\"),\n            },\n          },\n          {\n            \"@type\": \"ListItem\",\n            position: 2,\n            item: {\n              \"@id\": process.env.APP_URL + this.$route.path,\n              name: this.$t(\"atoms.links.contact\"),\n            },\n          },\n        ],\n      },\n    }\n  },\n  metaInfo() {\n    return {\n      title: this.$t(\"pages.contact.title\"),\n      titleTemplate: \"%s – \" + this.$t(\"atoms.name\"),\n      script: [\n        { innerHTML: JSON.stringify(this.jsonld), type: \"application/ld+json\" },\n      ],\n      meta: [\n        {\n          name: \"description\",\n          content: this.$t(\"pages.contact.meta.desc\"),\n        },\n        {\n          property: \"og:title\",\n          content:\n            this.$t(\"pages.contact.title\") + \" – \" + this.$t(\"atoms.name\"),\n        },\n        {\n          property: \"og:description\",\n          content: this.$t(\"pages.contact.meta.desc\"),\n        },\n        // {\n        //   property: \"og:image\",\n        //   content: this.$page.strapi.articles[0].Seo.shareImage.image.url,\n        // },\n      ],\n    }\n  },\n  // jsonld() {\n  //   const items = this.breadcrumbs.map((item, index) => ({\n  //     \"@type\": \"ListItem\",\n  //     position: index + 1,\n  //     item: {\n  //       \"@id\": item.url,\n  //       name: item.text,\n  //     },\n  //   }))\n  //   return {\n  //     \"@context\": \"http://schema.org\",\n  //     \"@type\": \"BreadcrumbList\",\n  //     itemListElement: items,\n  //   }\n  // },\n}\n",{"version":3,"sources":["Contact.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Contact.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n  <Layout>\n    <div class=\"max-w-2xl mx-auto pb-16\">\n      <Messanagers class=\"px-4\" />\n      <Task class=\"px-4\" />\n    </div>\n  </Layout>\n</template>\n<script>\nimport Task from \"~/components/organisms/Task\"\nimport Messanagers from \"~/components/organisms/Messanagers\"\nexport default {\n  components: {\n    Task,\n    Messanagers,\n  },\n  data() {\n    return {\n      // moment: moment,\n      jsonld: {\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        itemListElement: [\n          {\n            \"@type\": \"ListItem\",\n            position: 1,\n            item: {\n              \"@id\": process.env.APP_URL,\n              name: this.$t(\"homepage\"),\n            },\n          },\n          {\n            \"@type\": \"ListItem\",\n            position: 2,\n            item: {\n              \"@id\": process.env.APP_URL + this.$route.path,\n              name: this.$t(\"atoms.links.contact\"),\n            },\n          },\n        ],\n      },\n    }\n  },\n  metaInfo() {\n    return {\n      title: this.$t(\"pages.contact.title\"),\n      titleTemplate: \"%s – \" + this.$t(\"atoms.name\"),\n      script: [\n        { innerHTML: JSON.stringify(this.jsonld), type: \"application/ld+json\" },\n      ],\n      meta: [\n        {\n          name: \"description\",\n          content: this.$t(\"pages.contact.meta.desc\"),\n        },\n        {\n          property: \"og:title\",\n          content:\n            this.$t(\"pages.contact.title\") + \" – \" + this.$t(\"atoms.name\"),\n        },\n        {\n          property: \"og:description\",\n          content: this.$t(\"pages.contact.meta.desc\"),\n        },\n        // {\n        //   property: \"og:image\",\n        //   content: this.$page.strapi.articles[0].Seo.shareImage.image.url,\n        // },\n      ],\n    }\n  },\n  // jsonld() {\n  //   const items = this.breadcrumbs.map((item, index) => ({\n  //     \"@type\": \"ListItem\",\n  //     position: index + 1,\n  //     item: {\n  //       \"@id\": item.url,\n  //       name: item.text,\n  //     },\n  //   }))\n  //   return {\n  //     \"@context\": \"http://schema.org\",\n  //     \"@type\": \"BreadcrumbList\",\n  //     itemListElement: items,\n  //   }\n  // },\n}\n</script>\n"]}]}